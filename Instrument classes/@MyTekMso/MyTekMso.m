% Class for controlling 4-channel Tektronix MSO scopes. 

classdef MyTekMso < MyTekScope
    
    methods (Access = public)
        function this = MyTekMso(varargin)
            this.gui_name = 'GuiTekMso';
            P = MyClassParser(this);
            processInputs(P, this, varargin{:});
            
            this.knob_list = lower({'GPKNOB1', 'GPKNOB2', 'HORZPos', ...
                'HORZScale', 'TRIGLevel', 'PANKNOB1', 'ZOOM', ...
                'VERTPOS1', 'VERTPOS2', 'VERTPOS3', 'VERTPOS4', ...
                'VERTSCALE1', 'VERTSCALE2', 'VERTSCALE3', 'VERTSCALE4'});
            
            % Create communication object
            connect(this);  
            
            % 2e7 is the maximum trace size of DPO4034-3034 
            %(10 mln point of 2-byte integers)
            this.Comm.InputBufferSize = 2.1e7; %byte 
            
            createCommandList(this);
        end
    end
    
    methods (Access = protected)
        function createCommandList(this)
            addCommand(this, 'channel',':DATa:SOUrce', ...
                'format',       'CH%i', ...
                'info',         ['Channel from which the trace ' ...
                    'is transferred'], ...
                'value_list',   {1, 2, 3, 4});
            
            %%%% Not implemented in UI. What's selected on display
            %%%% is not relevant. 
            addCommand(this, 'ctrl_channel', ':DISplay:SELect:SOUrce', ...
                'format',       'CH%i', ...
                'info',         ['Channel currently selected in ' ...
                    'the scope display'], ...
                'value_list',   {1, 2, 3, 4});

            %Changed to any number input 
            addCommand(this, 'point_no', ':HORizontal:RECOrdlength', ...
                'format',       '%i', ...
                'info',         'Numbers of points in the scope trace (1k-62.5M)');
            
            addCommand(this, 'time_scale', ':HORizontal:SCAle', ...
                'format',   '%e', ...
                'info',     'Time scale (s/div)');  
            
            %Added EITHER option
            addCommand(this, 'trig_slope', ':TRIGger:A:EDGE:SLOpe', ...
                'format',       '%s', ...
                'value_list',   {'RISe','FALL','EITHER'});
            
            %Deleted EXT, AUX, does not seem to support on MSO
            addCommand(this, 'trig_source', ':TRIGger:A:EDGE:SOUrce', ...
                'format',       '%s', ...
                'value_list',   {'CH1','CH2','CH3','CH4','LINE'});
            
            %
            addCommand(this, 'trig_mode', ':TRIGger:A:MODe', ...
                'format',       '%s', ...
                'value_list',   {'AUTO', 'NORMal'});
            
            addCommand(this, 'acq_state', ':ACQuire:STATE', ...
                'format',   '%b',...
                'info',     'State of data acquisition by the scope');
            
            addCommand(this, 'acq_mode', ':ACQuire:MODe', ...
                'format',       '%s', ...
                'info',         ['Acquisition mode: sample, peak ' ...
                    'detect, high resolution, average or envelope'], ...
                'value_list',   {'SAMple', 'PEAKdetect', 'HIRes', ...
                    'AVErage', 'ENVelope'});
           
            % Parametric commands
            for i = 1:this.channel_no
                i_str = num2str(i);

                %%%% removed GND, not supported by MSO
                addCommand(this,...
                    ['cpl',i_str],[':CH',i_str,':COUP'], ...
                    'format',       '%s', ...
                    'info',         'Channel coupling: AC or DC', ...
                    'value_list',   {'DC','AC'}); 
                
                % impedances, 1MOhm or 50 Ohm, changed string value list
                addCommand(this,...
                    ['imp', i_str], [':CH', i_str, ':TERmination'],...
                    'format',       '%s', ...
                    'info',         'Channel impedance: 1 MOhm or 50 Ohm', ...
                    'value_list',   {'1.0000E+6', '50.0000'});
                
                % Offset Max/Min +-10V
                addCommand(this, ...
                    ['offset',i_str], [':CH',i_str,':OFFSet'], ...
                    'format',   '%e', ...
                    'info',     '(V)');
                % Scale Max 10V/div, Min 0.0005V/div
                addCommand(this, ...
                    ['scale',i_str], [':CH',i_str,':SCAle'], ...
                    'format',   '%e', ...
                    'info',     'Channel y scale (V/div)');
                
                addCommand(this,...
                    ['enable',i_str], [':SEL:CH',i_str], ...
                    'format',   '%b',...
                    'info',     'Channel enabled');

                %%%% MSO can specify the trigger level to any channel
                addCommand(this,...
                    ['trig_lev',i_str], [':TRIGger:A:LEVel:CH',i_str],...
                    'format',   '%e', ...
                    'info',     '(V)');

            end
        end
    end
end